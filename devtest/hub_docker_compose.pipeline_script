node {
	stage('Releasing a new container to a prison') {
		site = params.Site.toLowerCase()
		
		withCredentials([
        string(credentialsId: 'az_vault_mysql-root-pass', variable: 'mysql_root_pass'),
		string(credentialsId: 'az_vault_mysql-user-pass', variable: 'mysql_user_pass'),
		string(credentialsId: 'az_vault_matomo-mysql-root-pass', variable: 'matomo_mysql_root_pass'),
		string(credentialsId: 'az_vault_matomo-mysql-user-pass', variable: 'matomo_mysql_user_pass'),
		sshUserPrivateKey(credentialsId: "29c48f15-66b3-4a8c-b391-60782af72251", keyFileVariable: 'keyfile')
	]) {
	    	stage('Asset transfer') {
				git branch: "master", credentialsId: 'github_deploy_key', url: 'git@github.com:ministryofjustice/digital-hub.git'
				echo "Restarting containers in ${site}"
				wrap([$class: 'AnsiColorBuildWrapper', 'colorMapName': 'XTerm']) {
    				sh """	
    				    if [ "${site}" = "staging" ]; then
                            ssh_host="jenkins@digital-hub-stage.hmpps.dsd.io"
                        else
                            ssh_host="root@${site}.mycloudgateway.co.uk"
                        fi
                        
    					scp -i "${keyfile}" -oStrictHostKeyChecking=no docker-compose.yml \${ssh_host}:
    					ssh -i "${keyfile}" -oSendEnv=mysql_root_pass -oSendEnv=mysql_user_pass -oSendEnv=matomo_mysql_root_pass -oSendEnv=matomo_mysql_user_pass -oStrictHostKeyChecking=no \${ssh_host} "docker-compose up -d"
    				"""	
				}
				echo "Restarted containers in ${site}"
			}
		}
	}
}