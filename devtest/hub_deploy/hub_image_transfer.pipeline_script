node("docker-client") {
	image = "hub-node"
	sshHost = ""
			stage('Clone Digital Hub repository') {
				script {
					switch(params.Component) {
					  case "Frontend":
					    image = "mojdigitalstudio/digital-hub-node"
					    break
					  case "CMS":
					    image = "mojdigitalstudio/digital-hub-be"
					    break
					  case "DB":
					    image = "mariadb"
					    break
					  case "Matomo":
					    image = "digital-hub-matomo:latest"
					    break						
					  case "Stats DB":
					    image = "mariadb"
					    break
					  case "Elasticsearch":
					    image = "docker.elastic.co/elasticsearch/elasticsearch:5.6.0"
					    break
					  case "Nginx":
					    image = "nginx:latest"
					    break						
					  default:
					    echo "No inputs for Component detected"
					    break
					}
					switch(params.Prison) { // This shouldn't really be a switch, when we're feeling like being better people let's replace it with a downcase function..
					  case "Staging":
					    url = "staging"
					    break
					  case "Wayland":
					    url = "wayland"
					    break
					  case "Berwyn":
					    url = "berwyn"
					    break
					  default:
					    echo "No inputs for Prison detected"
					    break
					}
				}
			}
			stage('debug') {
				echo "${params.Component} / ${params.Prison}"

				script {
					if (url != "staging") {
						sshHost = "root@${url}.mycloudgateway.co.uk"
					} else {
						sshHost = "jenkins@digital-hub-stage.hmpps.dsd.io"
					}
				}

				echo "${image} / ${url} / ${sshHost}"
			}
			withCredentials([
			                string(credentialsId: 'az_vault_dockerhub_username_secret', variable: 'DOCKER_USER'),
			                string(credentialsId: 'az_vault_dockerhub_password_secret', variable: 'DOCKER_PASS'),
			                string(credentialsId: 'az_vault_acr-username-secret', variable: 'AZURE_DOCKER_USER'),
			                string(credentialsId: 'az_vault_acr-password-secret', variable: 'AZURE_DOCKER_PASS'),
			                string(credentialsId: 'az_vault_acr-repo-secret', variable: 'AZURE_DOCKER_REPO'),
			                sshUserPrivateKey(credentialsId: "29c48f15-66b3-4a8c-b391-60782af72251", keyFileVariable: 'keyfile')
			]) {
			    stage('Asset transfer') {
					echo "Moving ${image} to ${params.Prison}"

					sh """					
						docker system prune -f
						if [ "${image}" = "digital-hub-matomo:latest"]
						then
							docker -H tcp://10.0.1.4:2375 login -u ${AZURE_DOCKER_USER} -p ${AZURE_DOCKER_PASS} ${AZURE_DOCKER_REPO}
							export DOCKER_IMAGE="${AZURE_DOCKER_REPO}/digital-hub-matomo:latest"
						else
							docker -H tcp://10.0.1.4:2375 login -u ${DOCKER_USER} -p ${DOCKER_PASS}
							export DOCKER_IMAGE="${image}"
						fi
						time docker -H tcp://10.0.1.4:2375 pull "\$DOCKER_IMAGE"
						time docker -H tcp://10.0.1.4:2375 save "\$DOCKER_IMAGE" -o image.tar
						time cat image.tar | ssh -i "${keyfile}" -oStrictHostKeyChecking=no ${sshHost} "docker load"
						rm image.tar
					"""

					echo "Moved ${params.Component} to ${params.Prison}"
				}
			}
		}
